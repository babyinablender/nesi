#!/usr/bin/env python

'''
    The nesi executable can analyze a .nes rom image for information. In
    particular, nesi will extract the following:

        1. ROM Header (16 bytes)
        2. Mapper information
        3. PRG, CHR size info
        4. Example ROMs similar to this one (useful for emulator testing)
        5. Battery, Mirroring, VRAM, and Trainer information
        6. If bytes 7-15 appear valid or not
'''

# Import all standard library modules
from __future__ import print_function

import argparse

# Import all nesi modules
from nes import rom


def main():
    '''
        The main entry point for nesi. The entry point should parse command
        line arguments and delegate all work to the nes module.
    '''

    parser = argparse.ArgumentParser(
        description='Specify a .nes rom image to be analyzed'
    )

    parser.add_argument(
        '-r',
        '--rom',
        help='path to a .nes rom image to be analyzed',
        type=str
    )

    parser.add_argument(
        '-v',
        '--version',
        help='show the current nesi version',
        action='store_true'
    )

    args = parser.parse_args()

    if args.rom:
        rom.NesRom(args.rom).print_analysis()
    elif args.version:
        print(rom.nesi_information())
    else:
        parser.print_help()


if __name__ == '__main__':
    main()

# vim: ai tabstop=4 expandtab shiftwidth=4 softtabstop=4 ft=python
